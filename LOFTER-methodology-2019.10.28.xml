<?xml version="1.0" encoding="UTF-8"?>
<lofterBlogExport>
	<!--LOFTER日志导出数据-->
	<description>
		<BlogDomain>http://t25275916.lofter.com</BlogDomain>
		<ExportTime>2019-10-28 20:01</ExportTime>
	</description>
  <PostItem>
    <title><![CDATA[]]></title>
    <publishTime>1473590594372</publishTime>
    <modifyTime>1473590659702</modifyTime>
    <type>Photo</type>
    <permalink>1cec528e_c4eea95</permalink>
    <cctype>1</cctype>
    <caption><![CDATA[]]></caption>
    <photoLinks><![CDATA[[{"id":"tastId-2593960776","ow":406,"oh":451,"raw":"http://nos.netease.com/imglf1/img/Z3FrT2trZ2QzVzRJY1RMNlRibUdPRFRJYTgxMjJJOGpaQ0FyS2lRcDZuaDBpeXRtcHVlRXFnPT0.png","rw":406,"rh":451,"rotate":0,"small":"http://imglf1.nosdn.127.net/img/Z3FrT2trZ2QzVzRJY1RMNlRibUdPRFRJYTgxMjJJOGpaQ0FyS2lRcDZuaDBpeXRtcHVlRXFnPT0.png?imageView&thumbnail=164y164&enlarge=1&quality=90&type=jpg","middle":"http://imglf1.nosdn.127.net/img/Z3FrT2trZ2QzVzRJY1RMNlRibUdPRFRJYTgxMjJJOGpaQ0FyS2lRcDZuaDBpeXRtcHVlRXFnPT0.png?imageView&thumbnail=500x0&quality=96&stripmeta=0&type=jpg","orign":"http://imglf1.nosdn.127.net/img/Z3FrT2trZ2QzVzRJY1RMNlRibUdPRFRJYTgxMjJJOGpaQ0FyS2lRcDZuaDBpeXRtcHVlRXFnPT0.png?imageView&thumbnail=1680x0&quality=96&stripmeta=0&type=jpg"}]]]></photoLinks>
    <photoCaptions><![CDATA[[""]]]></photoCaptions>
    <photoExifs><![CDATA[]]></photoExifs>
  </PostItem>
  <PostItem>
    <title><![CDATA[Anaconda使用mpl_toolkits的方法]]></title>
    <publishTime>1435927720943</publishTime>
    <modifyTime>1436077990353</modifyTime>
    <type>Text</type>
    <permalink>1cec528e_77f9617</permalink>
    <tag>python,anaconda,matplotlib,mpl_toolkits,科学计算</tag>
    <content><![CDATA[<p>matplotlib已经成为使用python进行科学计算绘图的标准装备，而今天在Anaconda发行版下使用matplotlib提供的mpl_toolkits进行三维图形绘制时，却遇到了问题，mpl_toolkits相关py文件明明在目录之下，运行时却还是提示No module named 'mpl_toolkits'的提示，一贯稳定方便的Anaconda下还会出现这样的问题，面对网络中似是而非的解决办法，一时间有些无所适从。</p> 
<p>一些人说问题在于一个namespace package的概念，也就是将同一命名空间内的包分散在不同文件夹下存储时产生的问题，而我按照以下方法查看mpl_toolkits的路径时</p> 
<p>import importlib</p> 
<p>importlib.import_module('mpl_toolkits').__path__</p> 
<p>显示的路径当中已经包含__init__.py文件，却不包含必要函数文件，也就是问题在于没有指向正确的文件夹，这是问题似乎进入了无法解决境地。</p> 
<p>然而有洁癖的我在查看anaconda根目录时发现以前几乎所有版本的packages都保存在目录下面，占用巨大空间，进而想到要用conda clean命令来清理安装目录，或许可以解决连接的混乱。</p> 
<p>没想到，在清理之后，问题真的解决了。。。。。。。</p> 
<p>这时再查看mpl_toolkits的路径，显示出来的就是正确的位置了。</p> 
<p>————————————————————————————————</p> 
<p>之后发现，mpl_toolkits文件夹下的__init__.py文件的确是basemap包&nbsp;创建的。发现过程是这样的：由于basemap包体积巨大，而且目前用不到，因而考虑将其卸载，进而conda uninstall basemap，删除之后，matplotlib又找不到mpl_toolkits了，进入目录发现，真的是没有了__init__.py。</p> 
<p>那就自己添加一个吧！！！</p> 
<p>__init__.py ---------------------------------------------------------------------</p> 
<p>try:</p> 
<p>&nbsp;&nbsp;&nbsp; __import__('pkg_resources').declare_namespace(__name__)</p> 
<p>except ImportError:</p> 
<p>&nbsp;&nbsp;&nbsp; pass # must not have setuptools</p> 
<p>--------------------------------------------------------------------------------</p> 
<p>这样添加之后一切正常了。。。</p> 
<p>Anaconda应该修改一下这个问题。</p>]]></content>
  </PostItem>
  <PostItem>
    <title><![CDATA[5分钟地球物理反演]]></title>
    <publishTime>1435295946665</publishTime>
    <modifyTime>1549216800298</modifyTime>
    <type>Text</type>
    <permalink>1cec528e_7699996</permalink>
    <tag>地球物理,吐槽,反演,专业</tag>
    <cctype>1</cctype>
    <content><![CDATA[<p reblogfrom="reblogfrom"  ><a target="_blank" href="http://north-shore.lofter.com/post/1861fa_431d923"  >North Shore:</a></p> 
<blockquote> 
 <p>每次有人提到反演问题的时候，顿时整个人都感觉高大上了。反演课程在学校里也算是比较难学的一门课了。打开研一的时候老师让买的由本学院一位老师王家映编写的《地球物理反演理论》教材，翻了两页就有种想把它撕了的感觉，该书对于概念和理论讲得是似是而非、模棱两可，读起来晦涩生硬，这样的教材居然还是什么“教育部推荐“，我真是***，你懂的。当然在大学学习嘛，不想看的书也要硬着头皮看，上课的时候还要忍受个别教师的自以为标准的乡村英语，忽然感觉自己以前真是蛮拼的。</p> 
 <p>知道最近，机缘巧合之中被我发现一本旷世奇书《Global Optimization methods in geophysical inversion》,人家这本萌书本来是在着重讲非线性的反演方法，可是它却用了一章的篇幅，讲述了整个离散的地球物理反演理论，其优点不仅在于简明扼要，更在于思路清晰，读起来似有一阵清风扑面而来。这也就促使我利用读书机会复习总结梳理一下本来混乱的地球物理反演思路。</p> 
 <p>本来想写成一个比较专业的快速介绍地球物理反演的博文，没想到还是变成了纯吐槽。。。。</p> 
</blockquote>]]></content>
  </PostItem>
</lofterBlogExport>